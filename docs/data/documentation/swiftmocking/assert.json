{"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Assert","kind":"identifier"},{"kind":"text","text":"<each "},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Eff","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Eff"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:12SwiftMocking6EffectP","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You typically obtain an ","type":"text"},{"code":"Assert","type":"codeVoice"},{"text":" instance by calling the ","type":"text"},{"type":"codeVoice","code":"verify(_:)"},{"type":"text","text":" method on a "},{"code":"XCTestCase","type":"codeVoice"},{"text":".","type":"text"}]},{"anchor":"Usage-Example","type":"heading","level":3,"text":"Usage Example:"},{"type":"codeListing","syntax":"swift","code":["protocol MyService {","    func doSomething(value: String)","    func calculate(a: Int, b: Int) throws -> Int","}","","\/\/ Assuming MyServiceMock is generated by @Mockable macro","let mock = MyServiceMock()","let spy = mock.context \/\/ Access the spy instance","","\/\/ Perform some actions that interact with the mock","_ = try? mock.calculate(a: 1, b: 2)","mock.doSomething(value: \"test\")","","\/\/ Verify that 'doSomething' was called exactly once with \"test\"","verify(spy.doSomething(value: .equal(\"test\"))).called(1)","","\/\/ Verify that 'calculate' was called with any integers","verify(spy.calculate(a: .any, b: .any)).called()","","\/\/ Verify that 'calculate' threw an error","verify(spy.calculate(a: .any, b: .any)).throws()"]}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"generated":true,"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmocking\/assert"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert"},"abstract":[{"type":"text","text":"A class used for verifying interactions with a "},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","type":"reference","isActive":true},{"type":"text","text":"."}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Assert"}],"externalID":"s:12SwiftMocking6AssertC","navigatorTitle":[{"text":"Assert","kind":"identifier"}],"symbolKind":"class","title":"Assert","role":"symbol","roleHeading":"Class","modules":[{"name":"SwiftMocking"}]},"references":{"doc://SwiftMocking/documentation/SwiftMocking/Assert/assert(_:)":{"url":"\/documentation\/swiftmocking\/assert\/assert(_:)","abstract":[{"text":"Asserts that the spy’s method was called a certain number of times.","type":"text"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","kind":"symbol","title":"assert(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assert","kind":"identifier"},{"kind":"text","text":"("},{"text":"ArgMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":">?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking":{"type":"topic","url":"\/documentation\/swiftmocking","kind":"symbol","title":"SwiftMocking","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","role":"collection","abstract":[]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/doesThrow(_:)":{"type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)","title":"doesThrow(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"doesThrow"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","text":"ArgMatcher"},{"text":"<any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/swiftmocking\/assert\/doesthrow(_:)","abstract":[{"type":"text","text":"Asserts that the spy’s method threw an error."}],"kind":"symbol","role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/throws(_:file:line:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Asserts that the mocked method threw an error."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Eff"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Throwing"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)","title":"throws(_:file:line:)","role":"symbol","url":"\/documentation\/swiftmocking\/assert\/throws(_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`throws`","kind":"identifier"},{"kind":"text","text":"("},{"text":"ArgMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"kind":"text","text":"<any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/init(invocationMatcher:spy:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"invocationMatcher","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking17InvocationMatcherV","kind":"typeIdentifier","text":"InvocationMatcher"},{"kind":"text","text":"<repeat each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"spy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking3SpyC","kind":"typeIdentifier","text":"Spy"},{"kind":"text","text":"<repeat each "},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Eff","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"text":">)","kind":"text"}],"type":"topic","url":"\/documentation\/swiftmocking\/assert\/init(invocationmatcher:spy:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)","role":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"codeVoice","code":"Assert"},{"type":"text","text":" instance."}],"kind":"symbol","title":"init(invocationMatcher:spy:)"},"doc://SwiftMocking/documentation/SwiftMocking/Effect":{"kind":"symbol","url":"\/documentation\/swiftmocking\/effect","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","title":"Effect","abstract":[{"type":"text","text":"A protocol that defines the effect of a method, such as throwing an error or being asynchronous."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/neverCalled(file:line:)":{"url":"\/documentation\/swiftmocking\/assert\/nevercalled(file:line:)","title":"neverCalled(file:line:)","role":"symbol","type":"topic","abstract":[{"text":"Asserts that the mocked method was never called.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"neverCalled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)"},"doc://SwiftMocking/documentation/SwiftMocking/Assert":{"type":"topic","title":"Assert","navigatorTitle":[{"text":"Assert","kind":"identifier"}],"abstract":[{"type":"text","text":"A class used for verifying interactions with a "},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftmocking\/assert","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Assert","kind":"identifier"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert"},"doc://SwiftMocking/documentation/SwiftMocking/Spy":{"kind":"symbol","url":"\/documentation\/swiftmocking\/spy","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Spy","kind":"identifier"}],"type":"topic","title":"Spy","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"type":"text","text":" is a type that captures calls to a single method, enabling inspections."}],"role":"symbol","navigatorTitle":[{"text":"Spy","kind":"identifier"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/called(_:file:line:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"called","kind":"identifier"},{"kind":"text","text":"("},{"text":"ArgMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/swiftmocking\/assert\/called(_:file:line:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","abstract":[{"type":"text","text":"Asserts that the mocked method was called a specific number of times."}],"role":"symbol","title":"called(_:file:line:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Eff"},{"type":"text","text":" conforms to "},{"code":"Effect","type":"codeVoice"},{"type":"text","text":"."}]}}}}
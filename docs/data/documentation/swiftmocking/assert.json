{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","externalID":"s:12SwiftMocking6AssertC","roleHeading":"Class","symbolKind":"class","title":"Assert","navigatorTitle":[{"kind":"identifier","text":"Assert"}],"modules":[{"name":"SwiftMocking"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Assert","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert"},"abstract":[{"text":"A class used for verifying interactions with a ","type":"text"},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","type":"reference","isActive":true},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Assert","kind":"identifier"},{"kind":"text","text":"<each "},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Eff"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Eff"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12SwiftMocking6EffectP","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","kind":"typeIdentifier","text":"Effect"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You typically obtain an "},{"code":"Assert","type":"codeVoice"},{"text":" instance by calling the ","type":"text"},{"type":"codeVoice","code":"verify(_:)"},{"type":"text","text":" method on a "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":"."}]},{"type":"heading","level":3,"text":"Usage Example:","anchor":"Usage-Example"},{"code":["protocol MyService {","    func doSomething(value: String)","    func calculate(a: Int, b: Int) throws -> Int","}","","\/\/ Assuming MyServiceMock is generated by @Mockable macro","let mock = MyServiceMock()","let spy = mock.context \/\/ Access the spy instance","","\/\/ Perform some actions that interact with the mock","_ = try? mock.calculate(a: 1, b: 2)","mock.doSomething(value: \"test\")","","\/\/ Verify that 'doSomething' was called exactly once with \"test\"","verify(spy.doSomething(value: .equal(\"test\"))).called(1)","","\/\/ Verify that 'calculate' was called with any integers","verify(spy.calculate(a: .any, b: .any)).called()","","\/\/ Verify that 'calculate' threw an error","verify(spy.calculate(a: .any, b: .any)).throws()"],"type":"codeListing","syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking"]]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)"],"anchor":"Initializers"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/captured(_:file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmocking\/assert"]}],"references":{"doc://SwiftMocking/documentation/SwiftMocking/Assert":{"type":"topic","title":"Assert","url":"\/documentation\/swiftmocking\/assert","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Assert","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A class used for verifying interactions with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","type":"reference"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Assert"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/called(_:file:line:)":{"abstract":[{"type":"text","text":"Asserts that the mocked method was called a specific number of times."}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Eff"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Effect"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","url":"\/documentation\/swiftmocking\/assert\/called(_:file:line:)","title":"called(_:file:line:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"called","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ArgMatcher","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">?, ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"doc://SwiftMocking/documentation/SwiftMocking/Effect":{"url":"\/documentation\/swiftmocking\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","abstract":[{"text":"A protocol that defines the effect of a method, such as throwing an error or being asynchronous.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","title":"Effect","type":"topic"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/assert(_:)":{"url":"\/documentation\/swiftmocking\/assert\/assert(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assert"},{"kind":"text","text":"("},{"text":"ArgMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">?) "},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","title":"assert(_:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","abstract":[{"type":"text","text":"Asserts that the spyâ€™s method was called a certain number of times."}],"role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/captured(_:file:line:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Inspects captured arguments with automatic error reporting"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"captured","kind":"identifier"},{"kind":"text","text":"((repeat each "},{"kind":"typeIdentifier","text":"Input"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Eff","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Effect","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/swiftmocking\/assert\/captured(_:file:line:)","title":"captured(_:file:line:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/captured(_:file:line:)"},"doc://SwiftMocking/documentation/SwiftMocking/Spy":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Spy","kind":"identifier"}],"type":"topic","title":"Spy","navigatorTitle":[{"text":"Spy","kind":"identifier"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","url":"\/documentation\/swiftmocking\/spy","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"text":" is a type that captures calls to a single method, enabling inspections.","type":"text"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/throws(_:file:line:)":{"kind":"symbol","title":"throws(_:file:line:)","type":"topic","url":"\/documentation\/swiftmocking\/assert\/throws(_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`throws`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","kind":"typeIdentifier","text":"ArgMatcher"},{"text":"<any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Eff","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Throwing"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)","abstract":[{"type":"text","text":"Asserts that the mocked method threw an error."}],"role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/neverCalled(file:line:)":{"abstract":[{"type":"text","text":"Asserts that the mocked method was never called."}],"url":"\/documentation\/swiftmocking\/assert\/nevercalled(file:line:)","kind":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)","role":"symbol","type":"topic","title":"neverCalled(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"neverCalled","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/doesThrow(_:)":{"url":"\/documentation\/swiftmocking\/assert\/doesthrow(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"doesThrow","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","text":"ArgMatcher"},{"text":"<any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"type":"text","text":"Asserts that the spyâ€™s method threw an error."}],"role":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)","title":"doesThrow(_:)"},"doc://SwiftMocking/documentation/SwiftMocking":{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","abstract":[],"url":"\/documentation\/swiftmocking","role":"collection","kind":"symbol","title":"SwiftMocking","type":"topic"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/init(invocationMatcher:spy:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"codeVoice","code":"Assert"},{"type":"text","text":" instance."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"invocationMatcher"},{"text":": ","kind":"text"},{"text":"InvocationMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking17InvocationMatcherV"},{"text":"<repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">?, "},{"text":"spy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking3SpyC","kind":"typeIdentifier","text":"Spy"},{"kind":"text","text":"<repeat each "},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Eff","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"url":"\/documentation\/swiftmocking\/assert\/init(invocationmatcher:spy:)","title":"init(invocationMatcher:spy:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)"}}}
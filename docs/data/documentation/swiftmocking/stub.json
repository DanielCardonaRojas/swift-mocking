{"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/invocationMatcher","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/precedence"],"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/then(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-1covp","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenThrow(_:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmocking\/stub"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","isActive":true},{"type":"text","text":" is a type that provides a pre-canned answer for a single method."}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stub"},{"text":"<each ","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Effects"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"O"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Effects","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Effect","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking6EffectP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"You use stubs to control the behavior of a dependency during a test. For example, you can stub a method to return a specific value, or to throw an error.","type":"text"},{"text":" ","type":"text"},{"text":"Stubs are created by calling the ","type":"text"},{"type":"codeVoice","code":"when(calledWith:)"},{"type":"text","text":" method on a "},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","isActive":true,"type":"reference"},{"text":" and are recorded to intercept invocations on a method and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"return the programmed return value."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub"},"metadata":{"symbolKind":"class","roleHeading":"Class","role":"symbol","externalID":"s:12SwiftMocking4StubC","title":"Stub","modules":[{"name":"SwiftMocking"}],"navigatorTitle":[{"kind":"identifier","text":"Stub"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stub"}]},"references":{"doc://SwiftMocking/documentation/SwiftMocking/Spy":{"abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"type":"text","text":" is a type that captures calls to a single method, enabling inspections."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spy"}],"url":"\/documentation\/swiftmocking\/spy","navigatorTitle":[{"text":"Spy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","title":"Spy","role":"symbol","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/thenReturn(_:)-8rl84":{"role":"symbol","title":"thenReturn(_:)","abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"thenReturn"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84"},"doc://SwiftMocking/documentation/SwiftMocking/Stub":{"title":"Stub","role":"symbol","kind":"symbol","url":"\/documentation\/swiftmocking\/stub","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stub","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stub"}],"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","type":"reference"},{"type":"text","text":" is a type that provides a pre-canned answer for a single method."}]},"doc://SwiftMocking/documentation/SwiftMocking/Stub/precedence":{"title":"precedence","role":"symbol","abstract":[{"text":"The precedence of this stub based on its invocation matcher.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"precedence","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking17MatcherPrecedenceV","kind":"typeIdentifier","text":"MatcherPrecedence"}],"url":"\/documentation\/swiftmocking\/stub\/precedence","type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/precedence"},"doc://SwiftMocking/documentation/SwiftMocking":{"url":"\/documentation\/swiftmocking","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","type":"topic","role":"collection","abstract":[],"title":"SwiftMocking","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Effect":{"kind":"symbol","title":"Effect","abstract":[{"type":"text","text":"A protocol that defines the effect of a method, such as throwing an error or being asynchronous."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","url":"\/documentation\/swiftmocking\/effect"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/thenReturn(_:)-1covp":{"role":"symbol","title":"thenReturn(_:)","abstract":[{"text":"Defines the return value for this stub.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenReturn","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"O"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-1covp","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-1covp"},"doc://SwiftMocking/documentation/SwiftMocking/InvocationMatcher":{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/InvocationMatcher","type":"topic","abstract":[{"text":"A type that matches a set of arguments against a set of ","type":"text"},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/ArgMatcher","type":"reference","isActive":true},{"type":"text","text":"s."}],"kind":"symbol","url":"\/documentation\/swiftmocking\/invocationmatcher","title":"InvocationMatcher","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InvocationMatcher","kind":"identifier"}],"navigatorTitle":[{"text":"InvocationMatcher","kind":"identifier"}],"role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/invocationMatcher":{"type":"topic","url":"\/documentation\/swiftmocking\/stub\/invocationmatcher","title":"invocationMatcher","role":"symbol","kind":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/InvocationMatcher","isActive":true},{"text":" that defines when this stub should be applied.","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"invocationMatcher"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking17InvocationMatcherV","kind":"typeIdentifier","text":"InvocationMatcher"},{"kind":"text","text":"<repeat each "},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/invocationMatcher"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/then(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"then"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/then(_:)","url":"\/documentation\/swiftmocking\/stub\/then(_:)","title":"then(_:)","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/thenThrow(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Effects"},{"text":" conforms to ","type":"text"},{"code":"Throwing","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"thenThrow(_:)","role":"symbol","abstract":[{"text":"Defines an error to be thrown when this stub is matched.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"thenThrow","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftmocking\/stub\/thenthrow(_:)","type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenThrow(_:)"}}}
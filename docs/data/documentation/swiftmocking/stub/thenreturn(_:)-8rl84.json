{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"thenReturn","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"text":"O","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes the method arguments and returns the desired output.","type":"text"}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This allows you to create stubs with behavior that depends on the actual","type":"text"},{"type":"text","text":" "},{"type":"text","text":"arguments passed to the method. The closure receives the same arguments"},{"text":" ","type":"text"},{"type":"text","text":"as the original method and can compute a return value based on them."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"code":["when(mock.calculate(a: .any, b: .any)).thenReturn { a, b in","    return a + b  \/\/ Dynamic calculation based on arguments","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84"},"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub"]]},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"thenReturn","kind":"identifier"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","title":"thenReturn(_:)","externalID":"s:12SwiftMocking4StubC10thenReturnyyq0_xxQpcF","symbolKind":"method","modules":[{"name":"SwiftMocking"}]},"references":{"doc://SwiftMocking/documentation/SwiftMocking/Stub/thenReturn(_:)-8rl84":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenReturn"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84","title":"thenReturn(_:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84"},"doc://SwiftMocking/documentation/SwiftMocking/Stub":{"kind":"symbol","navigatorTitle":[{"text":"Stub","kind":"identifier"}],"title":"Stub","type":"topic","url":"\/documentation\/swiftmocking\/stub","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stub"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","isActive":true,"type":"reference"},{"type":"text","text":" is a type that provides a pre-canned answer for a single method."}],"role":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking":{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","abstract":[],"url":"\/documentation\/swiftmocking","role":"collection","kind":"symbol","title":"SwiftMocking","type":"topic"}}}
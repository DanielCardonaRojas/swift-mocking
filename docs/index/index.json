{"includedArchiveIdentifiers":["SwiftMocking"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/assert\/init(invocationmatcher:spy:)","title":"init(invocationMatcher: InvocationMatcher<repeat each Input>?, spy: Spy<repeat each Input, Eff, Output>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/assert\/assert(_:)","title":"func assert(ArgMatcher<Int>?) throws","type":"method"},{"path":"\/documentation\/swiftmocking\/assert\/called(_:file:line:)","title":"func called(ArgMatcher<Int>?, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/swiftmocking\/assert\/doesthrow(_:)","title":"func doesThrow(ArgMatcher<any Error>?) throws","type":"method"},{"path":"\/documentation\/swiftmocking\/assert\/nevercalled(file:line:)","title":"func neverCalled(file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/swiftmocking\/assert\/throws(_:file:line:)","title":"func `throws`(ArgMatcher<any Error>?, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/swiftmocking\/assert","title":"Assert","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/super","title":"var Super: Mock.Type","type":"property"},{"path":"\/documentation\/swiftmocking\/mock\/defaultproviderregistry-swift.property","title":"var defaultProviderRegistry: DefaultProvidableRegistry","type":"property"},{"path":"\/documentation\/swiftmocking\/mock\/isloggingenabled-swift.property","title":"var isLoggingEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/adapt(_:_:)-72zvo","title":"func adapt<each I, O>(Spy<repeat each I, Async, O>, repeat each I) async -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adapt(_:_:)-bsyh","title":"func adapt<each I, O>(Spy<repeat each I, None, O>, repeat each I) -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adaptthrowing(_:_:)-330oz","title":"func adaptThrowing<each I, O>(Spy<repeat each I, AsyncThrows, O>, repeat each I) async throws -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adaptthrowing(_:_:)-95r15","title":"func adaptThrowing<each I, O>(Spy<repeat each I, Throws, O>, repeat each I) throws -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/clear()-swift.method","title":"func clear()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/subscript(dynamicmember:)-swift.subscript","title":"subscript<each Input, Eff, Output>(dynamicMember _: String) -> Spy<repeat each Input, Eff, Output>","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/defaultproviderregistry-swift.type.property","title":"static var defaultProviderRegistry: DefaultProvidableRegistry","type":"property"},{"path":"\/documentation\/swiftmocking\/mock\/isloggingenabled-swift.type.property","title":"static var isLoggingEnabled: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/adapt(_:_:)-2b5rq","title":"static func adapt<each I, O>(Spy<repeat each I, None, O>, repeat each I) -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adapt(_:_:)-7r3ps","title":"static func adapt<each I, O>(Spy<repeat each I, Async, O>, repeat each I) async -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adaptthrowing(_:_:)-48ny8","title":"static func adaptThrowing<each I, O>(Spy<repeat each I, AsyncThrows, O>, repeat each I) async throws -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/adaptthrowing(_:_:)-5ld4b","title":"static func adaptThrowing<each I, O>(Spy<repeat each I, Throws, O>, repeat each I) throws -> O","type":"method"},{"path":"\/documentation\/swiftmocking\/mock\/clear()-swift.type.method","title":"static func clear()","type":"method"},{"title":"Type Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mock\/subscript(dynamicmember:)-swift.type.subscript","title":"static subscript<each Input, Eff, Output>(dynamicMember _: String) -> Spy<repeat each Input, Eff, Output>","type":"subscript"}],"path":"\/documentation\/swiftmocking\/mock","title":"Mock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/spy\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/spy\/invocations","title":"var invocations: [Invocation<repeat each Input>]","type":"property"},{"path":"\/documentation\/swiftmocking\/spy\/isloggingenabled","title":"var isLoggingEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/spy\/call(_:)-53eq1","title":"func call(repeat each Input) throws -> Output","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/call(_:)-78lmc","title":"func call(repeat each Input) async -> Output","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/call(_:)-7phkh","title":"func call(repeat each Input) async throws -> Output","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/call(_:)-9mubw","title":"func call(repeat each Input) -> Output","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verify(calledwith:count:)-1cxj5","title":"func verify(calledWith: InvocationMatcher<repeat each Input>, count: ArgMatcher<Int>) -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verify(calledwith:count:)-9a50q","title":"func verify(calledWith: repeat ArgMatcher<each Input>, count: ArgMatcher<Int>) -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verifycalled(_:)","title":"func verifyCalled(ArgMatcher<Int>?) -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verifyinorder(_:)","title":"func verifyInOrder([InvocationMatcher<repeat each Input>]) -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verifythrows()","title":"func verifyThrows() -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/verifythrows(_:)","title":"func verifyThrows(ArgMatcher<any Error>) -> Bool","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/when(calledwith:)-6epeu","title":"func when(calledWith: InvocationMatcher<repeat each Input>) -> Stub<repeat each Input, Effects, Output>","type":"method"},{"path":"\/documentation\/swiftmocking\/spy\/when(calledwith:)-6mlkz","title":"func when(calledWith: repeat ArgMatcher<each Input>) -> Stub<repeat each Input, Effects, Output>","type":"method"}],"path":"\/documentation\/swiftmocking\/spy","title":"Spy","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/stub\/invocationmatcher","title":"let invocationMatcher: InvocationMatcher<repeat each I>","type":"property"},{"path":"\/documentation\/swiftmocking\/stub\/precedence","title":"var precedence: MatcherPrecedence","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/stub\/then(_:)","title":"func then((repeat each I) -> O)","type":"method"},{"path":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-1covp","title":"func thenReturn(O)","type":"method"},{"path":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84","title":"func thenReturn((repeat each I) -> O)","type":"method"},{"path":"\/documentation\/swiftmocking\/stub\/thenthrow(_:)","title":"func thenThrow<E>(E)","type":"method"}],"path":"\/documentation\/swiftmocking\/stub","title":"Stub","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/asynchronous","title":"Asynchronous","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultprovider\/defaultproviderregistry","title":"var defaultProviderRegistry: DefaultProvidableRegistry","type":"property"}],"path":"\/documentation\/swiftmocking\/defaultprovider","title":"DefaultProvider","type":"protocol"},{"path":"\/documentation\/swiftmocking\/effect","title":"Effect","type":"protocol"},{"path":"\/documentation\/swiftmocking\/throwing","title":"Throwing","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(precedence:matcher:)","title":"init(precedence: MatcherPrecedence, matcher: (Argument) -> Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/callasfunction(_:)","title":"func callAsFunction(Argument) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/any","title":"static var any: ArgMatcher<Argument>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/any(_:)","title":"static func any<T>(T.Type) -> ArgMatcher<T>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/any(that:)","title":"static func any(that: (Argument) -> Bool) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/any(where:_:)","title":"static func any<Property>(where: KeyPath<Argument, Property>, Property) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/anyerror()","title":"static func anyError() -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/approximately(_:tolerance:)","title":"static func approximately(Argument, tolerance: Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/as(_:)","title":"static func `as`<T>(T.Type) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/between(_:_:)","title":"static func between(Argument, Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/contains(_:)-6crmh","title":"static func contains(Argument.Element) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/contains(_:)-9560n","title":"static func contains(String) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/endswith(_:)","title":"static func endsWith(String) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/equal(_:)","title":"static func equal(Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/error(_:)","title":"static func error<E>(E.Type) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/greaterthan(_:)","title":"static func greaterThan(Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/hascount(_:)","title":"static func hasCount(Int) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/hascount(in:)-8vwwb","title":"static func hasCount(in: PartialRangeThrough<Int>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/hascount(in:)-8wjl2","title":"static func hasCount(in: PartialRangeFrom<Int>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/hascount(in:)-ok2j","title":"static func hasCount(in: ClosedRange<Int>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/hascountbetween(_:_:)","title":"static func hasCountBetween(Int, Int) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/identical(_:)","title":"static func identical(Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/in(_:)-1d61w","title":"static func `in`(ClosedRange<Argument>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/in(_:)-1ry09","title":"static func `in`(PartialRangeFrom<Argument>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/in(_:)-6u7dq","title":"static func `in`(PartialRangeThrough<Argument>) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/isempty()","title":"static func isEmpty() -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/lessthan(_:)","title":"static func lessThan(Argument) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/matches(_:)","title":"static func matches(String) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/nil()","title":"static func `nil`<T>() -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/notnil()","title":"static func notNil<T>() -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/startswith(_:)","title":"static func startsWith(String) -> ArgMatcher<Argument>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/type(_:)","title":"static func type<T>(T.Type) -> ArgMatcher<T.Type>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/variadic(_:)-26qce","title":"static func variadic<Element>([ArgMatcher<Element>]) -> ArgMatcher<[Element]>","type":"method"},{"path":"\/documentation\/swiftmocking\/argmatcher\/variadic(_:)-354a9","title":"static func variadic<Element>(ArgMatcher<Element>...) -> ArgMatcher<[Element]>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(extendedgraphemeclusterliteral:)-2pkxy","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(extendedgraphemeclusterliteral:)-7kml5","title":"init(extendedGraphemeClusterLiteral: Argument)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(stringliteral:)","title":"init(stringLiteral: Argument)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(unicodescalarliteral:)-4rmve","title":"init(unicodeScalarLiteral: Argument)","type":"init"},{"path":"\/documentation\/swiftmocking\/argmatcher\/init(unicodescalarliteral:)-5l5su","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/swiftmocking\/argmatcher\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/swiftmocking\/argmatcher","title":"ArgMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultprovidableregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultprovidableregistry\/deregister(_:)","title":"func deregister(DefaultProviding)","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultprovidableregistry\/getdefaultfortype(_:)","title":"func getDefaultForType<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultprovidableregistry\/register(_:)","title":"func register(DefaultProviding)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultprovidableregistry\/default","title":"static let `default`: DefaultProvidableRegistry","type":"property"}],"path":"\/documentation\/swiftmocking\/defaultprovidableregistry","title":"DefaultProvidableRegistry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/init(_:create:)","title":"init<T>(T.Type, create: () -> T)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/array()","title":"static func array() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/bool()","title":"static func bool() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/dictionary()","title":"static func dictionary() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/numeric(_:)","title":"static func numeric<T>(T.Type) -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/optional()","title":"static func optional() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/set()","title":"static func set() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/string()","title":"static func string() -> DefaultProviding","type":"method"},{"path":"\/documentation\/swiftmocking\/defaultproviding\/void()","title":"static func void() -> DefaultProviding","type":"method"}],"path":"\/documentation\/swiftmocking\/defaultproviding","title":"DefaultProviding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/interaction\/init(_:spy:)","title":"init(repeat ArgMatcher<each Input>, spy: Spy<repeat each Input, Eff, Output>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/interaction\/invocationmatcher","title":"let invocationMatcher: InvocationMatcher<repeat each Input>","type":"property"},{"path":"\/documentation\/swiftmocking\/interaction\/spy","title":"let spy: Spy<repeat each Input, Eff, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/interaction\/invocations()","title":"func invocations() -> [(repeat each Input)]","type":"method"}],"path":"\/documentation\/swiftmocking\/interaction","title":"Interaction","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/invocation\/arguments","title":"let arguments: (repeat each Input)","type":"property"},{"path":"\/documentation\/swiftmocking\/invocation\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftmocking\/invocation","title":"Invocation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/invocationmatcher\/init(matchers:)","title":"init(matchers: repeat ArgMatcher<each I>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/invocationmatcher\/precedence","title":"var precedence: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/invocationmatcher\/ismatchedby(_:)","title":"func isMatchedBy(Invocation<repeat each I>) -> Bool","type":"method"}],"path":"\/documentation\/swiftmocking\/invocationmatcher","title":"InvocationMatcher","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/_(_:_:)-1s4c6","title":"static func < (MatcherPrecedence, MatcherPrecedence) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/init(value:)","title":"init(value: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/value","title":"var value: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/any","title":"static let any: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/customextreme","title":"static let customExtreme: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/customhigh","title":"static let customHigh: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/equalto","title":"static let equalTo: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/identicalto","title":"static let identicalTo: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/predicate","title":"static let predicate: MatcherPrecedence","type":"property"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/typematch","title":"static let typeMatch: MatcherPrecedence","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/'...(_:)-2g346","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/'...(_:)-8zm8o","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/_(_:_:)-1bz6w","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/_=(_:_:)-7yi90","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/_=(_:_:)-pkj7","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmocking\/matcherprecedence\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/matcherprecedence\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmocking\/matcherprecedence\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmocking\/matcherprecedence","title":"MatcherPrecedence","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/metatypeparser\/parse(_:)","title":"static func parse(any Any.Type) -> ParsedType","type":"method"}],"path":"\/documentation\/swiftmocking\/metatypeparser","title":"MetatypeParser","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/==(_:_:)","title":"static func == (MockingError, MockingError) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/didnotthrow","title":"static let didNotThrow: MockingError","type":"property"},{"path":"\/documentation\/swiftmocking\/mockingerror\/unstubbed","title":"static let unStubbed: MockingError","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/didnotmatchthrown(_:)","title":"static func didNotMatchThrown([any Error]) -> MockingError","type":"method"},{"path":"\/documentation\/swiftmocking\/mockingerror\/unfulfilledcallcount(_:)","title":"static func unfulfilledCallCount(Int) -> MockingError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmocking\/mockingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftmocking\/mockingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftmocking\/mockingerror","title":"MockingError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/parsedtype\/genericarguments","title":"let genericArguments: [ParsedType]","type":"property"},{"path":"\/documentation\/swiftmocking\/parsedtype\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/parsedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmocking\/parsedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmocking\/parsedtype","title":"ParsedType","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/verify(_:)","title":"func verify<each Input, Eff, Output>(Interaction<repeat each Input, Eff, Output>) -> Assert<repeat each Input, Eff, Output>","type":"func"},{"path":"\/documentation\/swiftmocking\/verifyinorder(_:file:line:)","title":"func verifyInOrder<each Input, Eff, Output>([Interaction<repeat each Input, Eff, Output>], file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/swiftmocking\/verifynever(_:file:line:)","title":"func verifyNever<each Input, Eff, Output>(Interaction<repeat each Input, Eff, Output>, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/swiftmocking\/verifyzerointeractions(_:file:line:)","title":"func verifyZeroInteractions(Mock, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/swiftmocking\/when(_:)","title":"func when<each Input, Eff, Output>(Interaction<repeat each Input, Eff, Output>) -> Stub<repeat each Input, Eff, Output>","type":"func"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/mockable(_:)","title":"macro Mockable(MockableOptions)","type":"macro"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/swiftmocking\/async","title":"Async","type":"enum"},{"path":"\/documentation\/swiftmocking\/asyncthrows","title":"AsyncThrows","type":"enum"},{"path":"\/documentation\/swiftmocking\/none","title":"None","type":"enum"},{"path":"\/documentation\/swiftmocking\/throws","title":"Throws","type":"enum"}],"path":"\/documentation\/swiftmocking","title":"SwiftMocking","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}
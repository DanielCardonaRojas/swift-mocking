{"kind":"symbol","identifier":{"url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub"]]},"metadata":{"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenReturn"},{"kind":"text","text":"((repeat each "},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:12SwiftMocking4StubC10thenReturnyyq0_xxQpcF","symbolKind":"method","modules":[{"name":"SwiftMocking"}],"title":"thenReturn(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"thenReturn","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" (repeat each "},{"kind":"typeIdentifier","text":"I"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A closure that takes the method arguments and returns the desired output."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows you to create stubs with behavior that depends on the actual"},{"text":" ","type":"text"},{"type":"text","text":"arguments passed to the method. The closure receives the same arguments"},{"type":"text","text":" "},{"text":"as the original method and can compute a return value based on them.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":"swift","code":["when(mock.calculate(a: .any, b: .any)).thenReturn { a, b in","    return a + b  \/\/ Dynamic calculation based on arguments","}"],"type":"codeListing"}]}],"abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"variants":[{"paths":["\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://SwiftMocking/documentation/SwiftMocking":{"url":"\/documentation\/swiftmocking","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","type":"topic","role":"collection","abstract":[],"title":"SwiftMocking","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/thenReturn(_:)-8rl84":{"role":"symbol","title":"thenReturn(_:)","abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"thenReturn"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/swiftmocking\/stub\/thenreturn(_:)-8rl84","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/thenReturn(_:)-8rl84"},"doc://SwiftMocking/documentation/SwiftMocking/Stub":{"title":"Stub","role":"symbol","kind":"symbol","url":"\/documentation\/swiftmocking\/stub","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stub","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stub"}],"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","type":"reference"},{"type":"text","text":" is a type that provides a pre-canned answer for a single method."}]}}}
{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"then"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"text":")","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes the method arguments and returns the desired output.","type":"text"}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an alias for "},{"type":"codeVoice","code":"thenReturn(_:)"},{"type":"text","text":" that provides a more concise syntax"},{"text":" ","type":"text"},{"type":"text","text":"for dynamic stubbing scenarios."}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["when(mock.calculate(a: .any, b: .any)).then { a, b in","    return a * b  \/\/ Dynamic calculation","}"]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub"]]},"identifier":{"url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/then(_:)","interfaceLanguage":"swift"},"metadata":{"title":"then(_:)","role":"symbol","externalID":"s:12SwiftMocking4StubC4thenyyq0_xxQpcF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"SwiftMocking"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"then","kind":"identifier"},{"kind":"text","text":"((repeat each "},{"kind":"typeIdentifier","text":"I"},{"text":") -> ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"abstract":[{"text":"Defines a dynamic return value using a closure that receives the method arguments.","type":"text"}],"variants":[{"paths":["\/documentation\/swiftmocking\/stub\/then(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://SwiftMocking/documentation/SwiftMocking/Stub":{"title":"Stub","role":"symbol","kind":"symbol","url":"\/documentation\/swiftmocking\/stub","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stub","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stub"}],"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub","type":"reference"},{"type":"text","text":" is a type that provides a pre-canned answer for a single method."}]},"doc://SwiftMocking/documentation/SwiftMocking":{"url":"\/documentation\/swiftmocking","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","type":"topic","role":"collection","abstract":[],"title":"SwiftMocking","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Stub/then(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"then"},{"text":"((repeat each ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"O"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Defines a dynamic return value using a closure that receives the method arguments."}],"type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Stub\/then(_:)","url":"\/documentation\/swiftmocking\/stub\/then(_:)","title":"then(_:)","kind":"symbol"}}}
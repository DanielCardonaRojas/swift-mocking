{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmocking\/assert"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)","doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"abstract":[{"text":"A class used for verifying interactions with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftMocking\/documentation\/SwiftMocking"]]},"metadata":{"role":"symbol","title":"Assert","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Assert","kind":"identifier"}],"externalID":"s:12SwiftMocking6AssertC","modules":[{"name":"SwiftMocking"}],"roleHeading":"Class","navigatorTitle":[{"text":"Assert","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Assert","kind":"identifier"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"text":"Eff","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Output","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Eff"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12SwiftMocking6EffectP","text":"Effect","kind":"typeIdentifier","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"You typically obtain an ","type":"text"},{"code":"Assert","type":"codeVoice"},{"type":"text","text":" instance by calling the "},{"code":"verify(_:)","type":"codeVoice"},{"type":"text","text":" method on a "},{"code":"XCTestCase","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Usage Example:","anchor":"Usage-Example","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["protocol MyService {","    func doSomething(value: String)","    func calculate(a: Int, b: Int) throws -> Int","}","","\/\/ Assuming MyServiceMock is generated by @Mockable macro","let mock = MyServiceMock()","let spy = mock.context \/\/ Access the spy instance","","\/\/ Perform some actions that interact with the mock","_ = try? mock.calculate(a: 1, b: 2)","mock.doSomething(value: \"test\")","","\/\/ Verify that 'doSomething' was called exactly once with \"test\"","verify(spy.doSomething(value: .equal(\"test\"))).called(1)","","\/\/ Verify that 'calculate' was called with any integers","verify(spy.calculate(a: .any, b: .any)).called()","","\/\/ Verify that 'calculate' threw an error","verify(spy.calculate(a: .any, b: .any)).throws()"]}],"kind":"content"}],"references":{"doc://SwiftMocking/documentation/SwiftMocking/Assert/assert(_:)":{"url":"\/documentation\/swiftmocking\/assert\/assert(_:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assert","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","text":"ArgMatcher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"assert(_:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/assert(_:)","abstract":[{"type":"text","text":"Asserts that the spy’s method was called a certain number of times."}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/neverCalled(file:line:)":{"type":"topic","abstract":[{"type":"text","text":"Asserts that the mocked method was never called."}],"url":"\/documentation\/swiftmocking\/assert\/nevercalled(file:line:)","title":"neverCalled(file:line:)","role":"symbol","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/neverCalled(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"neverCalled","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/init(invocationMatcher:spy:)":{"abstract":[{"text":"Initializes an ","type":"text"},{"code":"Assert","type":"codeVoice"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/init(invocationMatcher:spy:)","url":"\/documentation\/swiftmocking\/assert\/init(invocationmatcher:spy:)","role":"symbol","title":"init(invocationMatcher:spy:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"invocationMatcher"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking17InvocationMatcherV","kind":"typeIdentifier","text":"InvocationMatcher"},{"text":"<repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">?, "},{"text":"spy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking3SpyC","text":"Spy"},{"kind":"text","text":"<repeat each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"text":"Eff","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"text":">)","kind":"text"}]},"doc://SwiftMocking/documentation/SwiftMocking":{"url":"\/documentation\/swiftmocking","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking","type":"topic","role":"collection","abstract":[],"title":"SwiftMocking","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert/throws(_:file:line:)":{"title":"throws(_:file:line:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/throws(_:file:line:)","url":"\/documentation\/swiftmocking\/assert\/throws(_:file:line:)","role":"symbol","abstract":[{"type":"text","text":"Asserts that the mocked method threw an error."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`throws`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","text":"ArgMatcher"},{"text":"<any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">?, "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Eff"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Throwing"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://SwiftMocking/documentation/SwiftMocking/Assert/called(_:file:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"called","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:12SwiftMocking10ArgMatcherV","kind":"typeIdentifier","text":"ArgMatcher"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"called(_:file:line:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftmocking\/assert\/called(_:file:line:)","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/called(_:file:line:)","conformance":{"constraints":[{"type":"codeVoice","code":"Eff"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Effect"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Asserts that the mocked method was called a specific number of times.","type":"text"}]},"doc://SwiftMocking/documentation/SwiftMocking/Assert/doesThrow(_:)":{"url":"\/documentation\/swiftmocking\/assert\/doesthrow(_:)","type":"topic","kind":"symbol","role":"symbol","title":"doesThrow(_:)","abstract":[{"text":"Asserts that the spy’s method threw an error.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"doesThrow","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ArgMatcher","preciseIdentifier":"s:12SwiftMocking10ArgMatcherV"},{"text":"<any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">?) "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert\/doesThrow(_:)"},"doc://SwiftMocking/documentation/SwiftMocking/Spy":{"abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"type":"text","text":" is a type that captures calls to a single method, enabling inspections."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spy"}],"url":"\/documentation\/swiftmocking\/spy","navigatorTitle":[{"text":"Spy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy","title":"Spy","role":"symbol","kind":"symbol"},"doc://SwiftMocking/documentation/SwiftMocking/Assert":{"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Assert","url":"\/documentation\/swiftmocking\/assert","role":"symbol","abstract":[{"text":"A class used for verifying interactions with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Spy"},{"type":"text","text":"."}],"title":"Assert","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Assert"}],"navigatorTitle":[{"text":"Assert","kind":"identifier"}],"type":"topic"},"doc://SwiftMocking/documentation/SwiftMocking/Effect":{"kind":"symbol","title":"Effect","abstract":[{"type":"text","text":"A protocol that defines the effect of a method, such as throwing an error or being asynchronous."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/SwiftMocking\/documentation\/SwiftMocking\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","url":"\/documentation\/swiftmocking\/effect"}}}